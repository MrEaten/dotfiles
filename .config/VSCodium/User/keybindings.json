// Place your key bindings in this file to override the defaults
[ 
    // set ctrl+vim_navigation_keys for all modes
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+j",
        "command": "selectNextSuggestion",
        "when": "editorTextFocus && suggestWidgetVisible"
    },
    {
        "key": "ctrl+k",
        "command": "selectPrevSuggestion",
        "when": "editorTextFocus && suggestWidgetVisible"
    },
    {
        "key": "ctrl+h",
        "command": "list.collapse",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+l",
        "command": "list.expand",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+j",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+k",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus"
    },

    // rebind ctrl+g to every single function bound to escape
    { "key": "ctrl+g",                "command": "closeReferenceSearchEditor",
                                        "when": "inReferenceSearchEditor && !config.editor.stablePeek" },
    { "key": "ctrl+g",                "command": "cancelSelection",
                                        "when": "editorHasSelection && textInputFocus" },
    { "key": "ctrl+g",                "command": "removeSecondaryCursors",
                                        "when": "editorHasMultipleSelections && textInputFocus" },
    { "key": "ctrl+g",                "command": "closeBreakpointWidget",
                                        "when": "breakpointWidgetVisible && textInputFocus" },
    { "key": "ctrl+g",                "command": "editor.action.webvieweditor.hideFind",
                                        "when": "webviewFindWidgetVisible && !editorFocus && activeEditor == 'WebviewEditor'" },
    { "key": "ctrl+g",                "command": "editor.cancelOperation",
                                        "when": "cancellableOperation" },
    { "key": "ctrl+g",                "command": "editor.gotoNextSymbolFromResult.cancel",
                                        "when": "hasSymbols" },
    { "key": "ctrl+g",                "command": "settings.action.clearSearchResults",
                                        "when": "inSettingsSearch" },
    { "key": "ctrl+g",                "command": "leaveEditorMessage",
                                        "when": "messageVisible" },
    { "key": "ctrl+g",                "command": "leaveSnippet",
                                        "when": "editorTextFocus && inSnippetMode" },
    { "key": "ctrl+g",                "command": "closeDirtyDiff",
                                        "when": "dirtyDiffVisible" },
    { "key": "ctrl+g",                "command": "closeMarkersNavigation",
                                        "when": "editorFocus && markersNavigationVisible" },
    { "key": "ctrl+g",                "command": "closeParameterHints",
                                        "when": "editorFocus && parameterHintsVisible" },
    { "key": "ctrl+g",                "command": "hideSuggestWidget",
                                        "when": "suggestWidgetVisible && textInputFocus" },
    { "key": "ctrl+g",                "command": "cancelRenameInput",
                                        "when": "editorFocus && renameInputVisible" },
    { "key": "ctrl+g",                "command": "closeAccessibilityHelp",
                                        "when": "accessibilityHelpWidgetVisible && editorFocus" },
    { "key": "ctrl+g",                "command": "closeReplaceInFilesWidget",
                                        "when": "replaceInputBoxFocus && searchViewletVisible" },
    { "key": "ctrl+g",                "command": "keybindings.editor.clearSearchResults",
                                        "when": "inKeybindings && inKeybindingsSearch" },
    { "key": "ctrl+g",                "command": "list.clear",
                                        "when": "listFocus && listHasSelectionOrFocus && !inputFocus" },
    { "key": "ctrl+g",                "command": "search.action.cancel",
                                        "when": "listFocus && searchViewletVisible && !inputFocus" },
    { "key": "ctrl+g",                "command": "workbench.action.closeQuickOpen",
                                        "when": "inQuickOpen" },
    { "key": "ctrl+g",                "command": "workbench.action.hideInterfaceOverview",
                                        "when": "interfaceOverviewVisible" },
    { "key": "ctrl+g",                "command": "workbench.action.terminal.clearSelection",
                                        "when": "terminalFocus && terminalTextSelected && !terminalFindWidgetVisible" },
    { "key": "ctrl+g",                "command": "workbench.action.terminal.hideFindWidget",
                                        "when": "terminalFindWidgetVisible && terminalFocus" },
    { "key": "ctrl+g",                "command": "workbench.action.terminal.navigationModeExit",
                                        "when": "accessibilityModeEnabled && terminalA11yTreeFocus" },
    { "key": "ctrl+g",                "command": "breadcrumbs.selectEditor",
                                        "when": "breadcrumbsActive && breadcrumbsVisible" },
    { "key": "ctrl+g",                "command": "editor.closeCallHierarchy",
                                        "when": "callHierarchyVisible && !config.editor.stablePeek" },
    { "key": "ctrl+g",                "command": "filesExplorer.cancelCut",
                                        "when": "explorerResourceCut && explorerViewletVisible && filesExplorerFocus && !inputFocus" },
]